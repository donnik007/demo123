name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - name: Start PHP server (background)
        run: php -S 127.0.0.1:8000 -t app &

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - name: Start PHP server (background)
        run: php -S 127.0.0.1:8000 -t app &
      - name: Wait for PHP server
        run: npx wait-on http://127.0.0.1:8000
      - name: Start Selenium (background)
        run: |
          docker run -d -p 4444:4444 --name selenium --shm-size="2g" selenium/standalone-chrome:latest
      - name: Wait for Selenium to be ready
        run: |
          for i in {1..30}; do
            if curl -s http://127.0.0.1:4444/wd/hub/status | grep -q '"ready":true'; then
              echo "Selenium is ready!"; break;
            fi;
            echo "Waiting for Selenium..."; sleep 2;
            if [ "$i" -eq 30 ]; then echo "Selenium did not become ready in time"; exit 1; fi
          done
      - name: Run Selenium tests
        run: npm test
      - name: Stop Selenium
        run: docker stop selenium && docker rm selenium

  approve:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Await manual approval before deployment
        uses: peter-evans/manual-approval@v4
        with:
          timeout-minutes: 60
          approve-label: "Approve Deploy"

  deploy-onprem:
    name: Deploy On-Premises
    needs: approve
    runs-on: ubuntu-latest
    steps:
      - name: Placeholder for on-premises deployment
        run: echo "[ONPREM] Deploying to on-premises server..."

  deploy-cloud:
    name: Deploy Cloud
    needs: approve
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login (marked step)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Placeholder for cloud deployment
        run: echo "[CLOUD] Deploying to cloud environment..."
