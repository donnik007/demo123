name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - name: Start PHP server (background)
        run: php -S 127.0.0.1:8000 -t app &

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version
      - name: Run all tests in Docker Compose
        run: docker-compose up --build --abort-on-container-exit
      - name: Show logs on failure
        if: failure()
        run: docker-compose logs
      - name: Tear down Docker Compose
        run: docker-compose down -v
      - name: Summarize test results
        run: echo "All tests completed. Check logs for details."

  approve:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Await manual approval before deployment
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: user1,user2
          minimum-approvals: 1
          issue-title: "Manual Approval Required"
          issue-body: "Please approve or deny the continuation of this workflow."
          fail-on-denial: true

  deploy-onprem:
    name: Deploy On-Premises
    needs: approve
    runs-on: ubuntu-latest
    steps:
      - name: Placeholder for on-premises deployment
        run: echo "[ONPREM] Deploying to on-premises server..."

  deploy-cloud:
    name: Deploy Cloud
    needs: approve
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login (marked step)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Placeholder for cloud deployment
        run: echo "[CLOUD] Deploying to cloud environment..."
